<?xml version="1.0" encoding="UTF-8" ?>
<!-- scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 
	debug: 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="true" scanPeriod="5 minutes">
	<!--  <property name="LOG_PATH" value="/service/var/log/cache/uams/logs" />
	<property name="LOG_BACKUP_PATH" value="/service/var/log/cache/uams/logs/backup" />
	-->
	<property name="LOG_PATH" value="/Users/zyq/MyWork/cache/uams/logs" />
	<property name="LOG_BACKUP_PATH" value="/Users/zyq/MyWork/cache/uams/logs/backup" />
	
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<!-- encoder的默认实现类是ch.qos.logback.classic.encoder.PatternLayoutEncoder -->
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger -
				%msg%n</pattern>
		</encoder>
	</appender>

	<appender name="uamsLog"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/uams.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_BACKUP_PATH}/uams.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>5</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger -
				%msg%n</pattern>
		</encoder>
	</appender>

	<appender name="injectLog"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/inject.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_BACKUP_PATH}/inject.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>5</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>%msg%n</pattern>
		</encoder>
	</appender>

	<appender name="placeholderLog"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/placeholder.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_BACKUP_PATH}/placeholder.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>5</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>%msg%n</pattern>
		</encoder>
	</appender>

	<appender name="accessLog"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/access.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_BACKUP_PATH}/access.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>5</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>%msg%n</pattern>
		</encoder>
	</appender>

	<appender name="backupLog"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/backup.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_BACKUP_PATH}/backup.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>5</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>%msg%n</pattern>
		</encoder>
	</appender>

	<logger name="uams" level="DEBUG" additivity="false">
		<appender-ref ref="uamsLog" />
	</logger>

	<logger name="inject" level="INFO" additivity="false">
		<appender-ref ref="injectLog" />
	</logger>

	<logger name="placeholder" level="INFO" additivity="false">
		<appender-ref ref="placeholderLog" />
	</logger>

	<logger name="access" level="INFO" additivity="false">
		<appender-ref ref="accessLog" />
	</logger>
	
	<logger name="backup" level="INFO" additivity="false">
		<appender-ref ref="backupLog" />
	</logger>

	<root level="DEBUG">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="uamsLog" />
	</root>

</configuration>